---
# Test channel creation
- name: Create the operator.fabric.hyperledger.org/v1alpha1.Agent
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'operator_v1alpha1_agent_channelcreate.yaml'
  register: cmdresult

- name: Check the resource
  assert:
    that:
    - cmdresult.failed == False
    - cmdresult.changed == True
    - cmdresult.method == 'create'
    - cmdresult.result.status.conditions[0].ansibleResult.failures == 0
    fail_msg: Fabric Agent channel create failed
    success_msg: Fabric  Agent channel create succeeded

# Test channel query
- name: Create the operator.fabric.hyperledger.org/v1alpha1.Agent
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'operator_v1alpha1_agent_channelquery.yaml'
  register: cmdresult

- name: Check the resource
  assert:
    that:
    - cmdresult.failed == False
    - cmdresult.changed == True
    - cmdresult.method == 'patch'
    - cmdresult.result.status.conditions[0].ansibleResult.failures == 0
    fail_msg: Fabric Agent channel query failed
    success_msg: Fabric  Agent channel query succeeded

# Test channel join
- name: Create the operator.fabric.hyperledger.org/v1alpha1.Agent
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'operator_v1alpha1_agent_channeljoin.yaml'
  register: cmdresult

- name: Check the resource
  assert:
    that:
    - cmdresult.failed == False
    - cmdresult.changed == True
    - cmdresult.method == 'patch'
    - cmdresult.result.status.conditions[0].ansibleResult.failures == 0
    fail_msg: Fabric Agent channel join failed
    success_msg: Fabric  Agent channel join succeeded

# Get channel configuration using channel query
- name: Create the operator.fabric.hyperledger.org/v1alpha1.Agent
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_sleep: 150
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'operator_v1alpha1_agent_channelquery.yaml'
  register: cmdresult

- name: Check the resource
  assert:
    that:
    - cmdresult.failed == False
    - cmdresult.changed == True
    - cmdresult.method == 'patch'
    - cmdresult.result.status.conditions[0].ansibleResult.failures == 0
    - cmdresult.result.status.download != ''
    fail_msg: Fabric Agent channel query failed
    success_msg: Fabric  Agent channel query succeeded

- name: Get the current channel configuration json file
  command: "{{ cmdresult.result.status.download }} currentcfg.json"
  register: cmdresult

- debug:
    var: cmdresult