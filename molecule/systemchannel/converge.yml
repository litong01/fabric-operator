---
# This module basically setup various ca, orderer, peer nodes for
# an organization.
- name: Converge
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
# Setup the first organization
  - name: Load the first org configuration file
    include_vars:
      file: ".orderer.yml"

  - name: Create Namespace
    community.kubernetes.k8s:
      api_version: v1
      kind: Namespace
      name: '{{ namespace }}'
      kubeconfig: '{{ kubeconfig }}'

  - include_tasks: ../basesystem/tasks/orgs.yml
    vars:
      state: present

  # Create a channel and query channel
  - name: Create, join and query the channel
    community.kubernetes.k8s:
      state: "present"
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+action) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    loop:
    - 'agent_channelcreate_legacy.j2'
    - 'agent_channeljoin.j2'
    - 'agent_channelquery.j2'
    loop_control:
      loop_var: action

  - name: Load the peer org configuration file
    include_vars:
      file: ".peer1.yml"

  - name: Create Namespace
    community.kubernetes.k8s:
      api_version: v1
      kind: Namespace
      name: '{{ namespace }}'
      kubeconfig: '{{ kubeconfig }}'

  - include_tasks: ../basesystem/tasks/orgs.yml
    vars:
      state: present

# Do asset gen
  - name: Generate the asset for the organization
    community.kubernetes.k8s:
      state: "present"
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+action) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      includewallets: 'yes'
    loop:
    - 'agent_assetgen.j2'
    loop_control:
      loop_var: action

  - name: Query the agent
    community.kubernetes.k8s_info:
      kind: Agent
      api_version: 'operator.fabric.hyperledger.org/v1alpha1'
      name: '{{ agentname }}'
      namespace: '{{ namespace }}'
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        status: "True"
        reason: Successful
    register: cmdresult

  - name: Parse the download url from above command result
    set_fact:
      pieces: "{{ cmdresult.resources[0].status.download.split(':')[0].split(' ') }}"

  - name: Unzip the asset file
    community.kubernetes.k8s_exec:
      pod: "{{ pieces[6] }}"
      container: "{{ pieces[5] }}"
      namespace: "{{ pieces[3] }}"
      command: >-
        unzip -o /opt/ansible/agent/download/org1-example-com-assets.zip -d /opt/ansible/agent/download

  - name: Copy the peer1 org file to the upload directory
    community.kubernetes.k8s_exec:
      pod: "{{ pieces[6] }}"
      container: "{{ pieces[5] }}"
      namespace: "{{ pieces[3] }}"
      command: >-
        cp /opt/ansible/agent/download/assets/Organizations/org1.example.com.json
        /opt/ansible/agent/upload/neworg.json

# Switch back to the first organization and its namespace
  - name: Load up the orderer org variables for the first organization
    include_vars:
      file: ".orderer.yml"

  - name: Switch the namespace
    community.kubernetes.k8s:
      api_version: v1
      kind: Namespace
      name: '{{ namespace }}'
      kubeconfig: '{{ kubeconfig }}'

  - name: Execute node import
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'agent_nodeimport.j2'
      assetname: 'org1-example-com-assets.zip'
    register: cmdresult

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent node import failed
      successmsg: Fabric Agent node import succeeded

  - name: Execute org join
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'agent_orgjoin.j2'
    register: cmdresult

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent org join failed
      successmsg: Fabric Agent org join succeeded

  # Test channel signoff
  - name: Execute channel signoff
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'agent_channelsignoff.j2'
    register: cmdresult

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent channel signoff failed
      successmsg: Fabric Agent channel signoff succeeded
  
  # Test channel update
  - name: Execute channel update
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'agent_channelupdate.j2'
    register: cmdresult

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent channel update failed
      successmsg: Fabric Agent channel update succeeded

  - name: Generate the asset for the organization
    community.kubernetes.k8s:
      state: "present"
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+action) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      includewallets: 'yes'
    loop:
    - 'agent_assetgen.j2'
    loop_control:
      loop_var: action

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent channel asset gen failed
      successmsg: Fabric Agent channel asset gen succeeded

# Since the second org is now part of the channel
# Join its peer to the channel
  - name: Load the first peer org configuration file
    include_vars:
      file: ".peer1.yml"

  - name: Switch Namespace
    community.kubernetes.k8s:
      api_version: v1
      kind: Namespace
      name: '{{ namespace }}'
      kubeconfig: '{{ kubeconfig }}'

  - name: Import orderer org assets to the peer1 org namespace
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'agent_nodeimport.j2'
      assetname: 'example-com-assets.zip'
    register: cmdresult

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent asset import failed
      successmsg: Fabric Agent asset import succeeded

  - name: Join the peer to the channel
    community.kubernetes.k8s:
      state: "present"
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/agent_channeljoin.j2') | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent channel join failed
      successmsg: Fabric Agent channel join succeeded


  - name: Load the orderer org configuration file
    include_vars:
      file: ".orderer.yml"

  - name: Switch to the orderer org namespace
    community.kubernetes.k8s:
      api_version: v1
      kind: Namespace
      name: '{{ namespace }}'
      kubeconfig: '{{ kubeconfig }}'

  - name: Query the channel again from peer1 org
    community.kubernetes.k8s:
      state: "present"
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/agent_channelquery.j2') | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"

  - name: Verify previous operation
    include_tasks: ../basesystem/tasks/queryverify.yml
    vars:
      failmsg: Fabric Agent channel query failed
      successmsg: Fabric Agent channel query succeeded

  - name: Create a console for orderer org
    community.kubernetes.k8s:
      state: present
      namespace: '{{ namespace }}'
      definition: >-
        {{ lookup('template', project_dir+'/molecule/basesystem/tasks/templates/'+tp_file) | from_yaml }}
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Running
        reason: Successful
        status: "True"
    vars:
      tp_file: 'console.j2'
      consolename: 'orderorgconsole'
