# Tasks to create a new gateway and virtual service for the node
# Here is the logic to find an available port for a service
# 1. Find all the istio ingress gateway deployment and services
# 2. Use the first found deployment and service. This logic need
#    some improvement to make sure correct deployment and service
#    is updated
# 3. Find all the ports from the service
# 4. For new node, find a port which is not in the port list

- name: Allow istio injection
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ ansible_operator_meta.namespace }}"
    merge_type: strategic-merge
    definition:
      metadata:
        labels:
          istio-injection: enabled

- name: Search for all istio ingress gateways
  community.kubernetes.k8s_info:
    kind: "{{ item }}"
    label_selectors:
      - app = istio-ingressgateway
      - istio = ingressgateway
      - release = istio
      - operator.istio.io/component = IngressGateways
  with_items:
  - Deployment
  - Service
  register: istio_info

- name: Get istio info when there are deployments and services
  when: istio_info.results[0].resources|length > 0 and istio_info.results[1].resources|length > 0
  block:
  - name: Set up variables
    set_fact:
      istio_namespace: "{{ istio_info.results[0].resources[0].metadata.namespace | default('') }}"
      istio_deplyment_name: "{{ istio_info.results[0].resources[0].metadata.name | default('') }}"
      istio_service_name: "{{ istio_info.results[1].resources[0].metadata.name | default('') }}"
      istio_hostname: "{{ istio_info.results[1].resources[0].status.loadBalancer.ingress[0].hostname | default('') }}"
      istio_ports: "{{ istio_info.results[1].resources[0].spec.ports | default([]) }}"

  - name: Get all the used ports
    set_fact:
      used_ports: "{{ istio_ports | map(attribute='port') | list | map('string') | list }}"
      all_ports: "{{ lookup('sequence', 'start=31001 end=32767', wantlist=True) }}"
    no_log: True

  - name: Find first available port
    set_fact:
      ext_port: "{{ (all_ports | difference(used_ports))[0] | int }}"

# this is the situation that there is no istio ingress gateway or deployment
# available, thus, the endpoint can not be exposed to outside of the cluster
- name: Get istio deployment
  when: istio_info.results[0].resources|length == 0 or istio_info.results[1].resources|length == 0
  fail:
    msg: "Istio system was not setup correctly, please make sure that the istio ingress service and depolyment are running"
