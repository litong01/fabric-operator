# Tasks to create a new gateway and virtual service for the node
- name: Check the existance of the gateway
  community.kubernetes.k8s_info:
    name: '{{ ansible_operator_meta.name }}-gateway'
    namespace: '{{ ansible_operator_meta.namespace }}'
    api_version: 'networking.istio.io/v1beta1'
    kind: Gateway
  register: thegateway

# Now we will need to create gateway for the node when there is none
- name: Create the gateway for the node
  when: (thegateway.resources|length) == 0 and ext_port > 0
  community.kubernetes.k8s:
    name: '{{ ansible_operator_meta.name }}-gateway'
    namespace: '{{ ansible_operator_meta.namespace }}'
    api_version: 'networking.istio.io/v1beta1'
    kind: Gateway
    apply: yes
    definition:
      spec:
        selector:
          istio: ingressgateway
        servers:
        - port:
            number: '{{ ext_port }}'
            name: 'tcp{{ ext_port }}'
            protocol: TCP
          hosts:
          - '{{ domain }}'

- name: Check the existance of the virtual service
  community.kubernetes.k8s_info:
    name: '{{ ansible_operator_meta.name }}-virtualservice'
    namespace: '{{ ansible_operator_meta.namespace }}'
    api_version: 'networking.istio.io/v1beta1'
    kind: VirtualService
  register: thevs

# Now we will create virtual service to route the traffic to the node
- name: Create the virtual service for the node
  when: (thevs.resources|length) == 0 and ext_port > 0
  community.kubernetes.k8s:
    name: '{{ ansible_operator_meta.name }}-virtualservice'
    namespace: '{{ ansible_operator_meta.namespace }}'
    api_version: 'networking.istio.io/v1beta1'
    kind: VirtualService
    apply: yes
    definition:
      spec:
        hosts:
        - '{{ domain }}'
        gateways:
        - '{{ ansible_operator_meta.name }}-gateway'
        tcp:
        - match:
          - port: '{{ ext_port }}'
          route:
          - destination:
              host: '{{ ansible_operator_meta.name }}'
              port:
                number: 7054
