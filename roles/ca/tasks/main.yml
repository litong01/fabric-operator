---
- name: Get the home directory
  set_fact:
    workdir: "{{ lookup('env','HOME') }}/vars"
    nodename: "{{ ansible_operator_meta.name }}.{{ domain }}"

- name: Make sure that working directory exists
  file:
    path: "{{ workdir }}"
    state: "directory"
    mode: 0775

- name: Generate an Certificate Signing Request
  community.crypto.openssl_csr:
    path: "{{ workdir }}/{{ nodename}}.csr"
    privatekey_path: "{{ workdir }}/{{ nodename }}.key"
    country_name: US
    organization_name: CA
    common_name: "{{ nodename }}"

- name: Generate a certificate based on CSR
  community.crypto.x509_certificate:
    path: "{{ workdir }}/{{ nodename }}.crt"
    privatekey_path: "{{ workdir }}/{{ nodename }}.key"
    csr_path: "{{ workdir }}/{{ nodename}}.csr"
    provider: selfsigned

- name: Create a secret
  community.kubernetes.k8s:
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-mysecret'
        namespace: '{{ ansible_operator_meta.namespace }}'
      type: Opaque
      data:
        extra: YmFyCG==
- name: start memcached
  community.kubernetes.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-memcached'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: memcached
        template:
          metadata:
            labels:
              app: memcached
          spec:
            containers:
            - name: memcached
              command:
              - memcached
              - -m=64
              - -o
              - modern
              - -v
              image: "docker.io/memcached:1.4.36-alpine"
              ports:
                - containerPort: 11211