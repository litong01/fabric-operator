- name: Search for the matching secret for the genesis file
  community.kubernetes.k8s_info:
    kind: Secret
    api_version: v1
    name: '{{ genesisfile }}'
    namespace: '{{ ansible_operator_meta.namespace }}'
  register: genesissecret

- name: Create one if there is none
  when: (genesissecret.resources|length) == 0
  block:
  - name: Setup bindir
    set_fact:
      bindir: "{{ lookup('env','HOME') }}/agent/{{ release }}"
      workdir: "{{ lookup('env','HOME') }}/orderer/{{ 99999999 | random | to_uuid }}"

  - name: Search for the matching node cert secret
    community.kubernetes.k8s_info:
      kind: Secret
      api_version: v1
      name: '{{ nodecertsecretname }}'
      namespace: '{{ ansible_operator_meta.namespace }}'
    register: nodecert_secret

  - name: Set up user msp directory
    file:
      path: '{{ workdir }}/{{ item }}'
      state: 'directory'
      mode: 0775
    with_items:
    - '{{ nodename }}'
    - '{{ nodename }}/msp'
    - '{{ nodename }}/msp/admincerts'
    - '{{ nodename }}/msp/cacerts'
    - '{{ nodename }}/msp/keystore'
    - '{{ nodename }}/msp/signcerts'
    - '{{ nodename }}/msp/tlscacerts'
    - '{{ nodename }}/tls'

  - name: Write certs to the correct location
    copy:
      content: '{{ nodecert_secret.resources[0].data[item.src]|b64decode }}'
      dest: '{{ workdir }}/{{ nodename }}/{{ item.dest }}'
    with_items:
    - "{{ { 'src': 'admin.crt',   'dest': 'msp/admincerts/admin.pem'} }}"
    - "{{ { 'src': 'ca.crt',      'dest': 'msp/cacerts/ca.pem'} }}"
    - "{{ { 'src': 'admin.crt',   'dest': 'msp/signcerts/user.crt'} }}"
    - "{{ { 'src': 'admin.key',   'dest': 'msp/keystore/prive_sk'} }}"
    - "{{ { 'src': 'tlsca.crt',   'dest': 'msp/tlscacerts/ca.crt'} }}"
    - "{{ { 'src': 'tlsca.crt',   'dest': 'tls/ca.crt'} }}"
    - "{{ { 'src': 'tls.crt',     'dest': 'tls/client.crt'} }}"
    - "{{ { 'src': 'tls.key',     'dest': 'tls/client.key'} }}"

  - name: Get fabric tools
    include_tasks: getbin.yml

  - name: Create the configtx
    template:
      src: '{{ role_path }}/tasks/templates/configtx.j2'
      dest: '{{ workdir }}/config/configtx.yaml'

  - name: Create the genesis block
    ansible.builtin.shell: |
      {{ bindir }}/bin/configtxgen -profile SystemChannel \
      -outputBlock genesis.block --channelID systemchannel
    args:
      chdir: '{{ workdir }}/config'
      executable: /bin/bash

  - name: Create genesis block secret
    community.kubernetes.k8s:
      definition:
        kind: Secret
        apiVersion: v1
        metadata:
          name: '{{ genesisfile }}'
          namespace: '{{ ansible_operator_meta.namespace }}'
          labels:
            fabric-node-type: Genesisfile
            fabric-organization: '{{ organization }}'
        type: Opaque
        data:
          block: "{{ lookup('file', workdir+'/config/genesis.block') | b64encode }}"
