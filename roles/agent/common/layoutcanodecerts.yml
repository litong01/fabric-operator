# This module layout certs in the msp structure
# The input must be the following
#    nodeid - indicate what nodeid is
#    resdata - the data out of the secret

- name: Check if name variable is set
  when: nodeid == '' or data == None 
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Failed - No nodeid or data provided'

- name: Set up user msp directory
  file:
    path: '{{ agentworkdir }}/{{ item }}'
    state: 'directory'
    mode: 0775
  with_items:
  - '{{ nodeid }}'
  - '{{ nodeid }}/msp'
  - '{{ nodeid }}/msp/cacerts'
  - '{{ nodeid }}/msp/signcerts'
  - '{{ nodeid }}/msp/tlscacerts'
  - '{{ nodeid }}/tls'

- name: Write certs to the correct location
  copy:
    content: '{{ data[item.src]|b64decode }}'
    dest: '{{ agentworkdir }}/{{ nodeid }}/{{ item.dest }}'
  with_items:
  - "{{ { 'src': 'ca-cert.pem',    'dest': 'msp/cacerts/ca.pem'} }}"
  - "{{ { 'src': 'admin.crt',      'dest': 'msp/signcerts/user.crt'} }}"
  - "{{ { 'src': 'tls-cert.pem',     'dest': 'msp/tlscacerts/ca.crt'} }}"
  - "{{ { 'src': 'tls-cert.pem',     'dest': 'tls/ca.crt'} }}"

- name: Create the config.yaml file
  copy:
    dest: "{{ agentworkdir }}/{{ nodeid }}/msp/config.yaml"
    content: >-
      NodeOUs:
        Enable: true
        ClientOUIdentifier:
          Certificate: cacerts/ca.pem
          OrganizationalUnitIdentifier: client
        PeerOUIdentifier:
          Certificate: cacerts/ca.pem
          OrganizationalUnitIdentifier: peer
        AdminOUIdentifier:
          Certificate: cacerts/ca.pem
          OrganizationalUnitIdentifier: admin
        OrdererOUIdentifier:
          Certificate: cacerts/ca.pem
          OrganizationalUnitIdentifier: orderer
