# To import external nodes into your clusters
#
# spec:
#   organization: example.com
#   actions:
#   - name: nodeimport
#     description: import nodes and their certificates
#     parameters:
#       assetname: assets.zip
#
#  assetname is the tar or zip file file name which contains all the asset files
#  this file must be uploaded to the controller prior executing this
#  command.

- name: Get variable with their names
  set_fact:
    assetname: "{{ action.parameters.assetname }}"

- name: End the process if asset name was not provided
  when: assetname == ''
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Failed - asset zip file name must be provided for node import'

- name: Check if the indicated file exists
  stat:
    path: '{{ uploaddir }}/{{ assetname }}'
  register: assetfile

- name: End the process if file does not exist
  when: not assetfile.stat.exists
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Failed - asset zip file does not exist, upload first'
    UPLOADLOAD_MSG: >-
      kubectl cp {{ assetname }} -n {{ controllerns }} -c manager
      {{ podname }}:{{ uploaddir }}/{{ assetname }}

- name: Unpackage all the assets to the work directory
  unarchive:
    src: '{{ uploaddir }}/{{ assetname }}'
    dest: "{{ agentworkdir }}"

- name: Recursively find all the asset files
  find:
    paths: "{{ agentworkdir }}"
    patterns: '*.json'
    recurse: yes
    file_type: file
  register: allassets

- name: Process all the uploaded assets
  include_tasks: 'doresource.yml'
  loop: "{{ allassets.files }}"
  loop_control:
    loop_var: asset

- name: Update the crd status
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Succeeded - Assets have been imported'
