# To create a new channel, an action must look like this
#
# - name: channelquery
#   description: query channel configuration
#   params:
#   - name: channelName
#     value: mychannel
#   - name: ordererNode
#     value: orderer-sample
#
# The operation will look at the orderer nodecert first, if not found
# it will try to find node asset to get endpoint and certificates.
# either the short orderer node name or the full orderer name can be
# used

- name: Show the passed in variable
  debug:
    var: action

- name: Get variable with their names
  set_fact:
    channelName: >-
      {{ (action.params | selectattr('name','equalto','channelName') | map(attribute='value') | list)[0] }}
    ordererNode: >-
      {{ (action.params | selectattr('name','equalto','ordererNode') | map(attribute='value') | list)[0] }}

- name: Fail the process if either variable is empty
  fail:
    msg: 'Both channel name and initial orderer node must be provided'
  when: channelName == '' or ordererNode == ''

- name: Fixup the orderer name in case only the short name used
  when: not (orgid in (ordererNode|replace('.','-')))
  set_fact:
    ordererNode: "{{ ordererNode|replace('.','-') }}-{{ orgid }}"

# Now we get the nodecert under which the operation is performed
- name: Get user info
  include_tasks: '{{ role_path }}/common/getuserinfo.yml'

# Now we get the orderer node info from either nodecert or node asset
- name: Get node info
  include_tasks: '{{ role_path }}/common/getnodeinfo.yml'
  vars:
    thesecretname: "{{ ordererNode }}"

# When we reach here, we should have either the orderer node cert or
# orderer node asset secret.
# - name: 'Query channel {{ channelName }}'
#   ansible.builtin.shell: |
#     export FABRIC_CFG_PATH={{ workdir }}/{{ orgid }}/config
#     {{ bindir }}/bin/peer channel fetch config config_block.pg \
#     --tls -c {{ channelName }} \
#     -o {{ endpoint }} \
#     --cafile $ORDERER_TLS_CA
#   args:
#     chdir: '{{ workdir }}/{{ orgid }}/config'
#     executable: /bin/bash
