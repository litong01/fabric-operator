# To generate the asset file for console import
#
# - name: assetgen
#   description: Generate organiztion asset for download and eventually
#     import into console
#   params:
#   - name: assettypes
#     value: ['ca', 'orderer', 'peer']
#   - name: includewallets
#     value: no
#
#  assettypes indicate what resource wanting to be included in the exported file
#  includewallets indicates if the admin wallets should also be included

- name: Show the passed in variable
  debug:
    var: action

- name: Get variable with their names
  set_fact:
    assettypes: >-
      {{ action.params | selectattr('name','equalto','assettypes') | map(attribute='value') | list }}
    includewallets: >-
      {{ (action.params | selectattr('name','equalto','includewallets') | map(attribute='value') | list)[0] }}

- name: Fail the process if asset types are not provided
  fail:
    msg: 'no assets to be exported'
  when: (assettypes | length) == 0

- name: Filter out the invalid items
  set_fact:
    alltypes: "{{ (alltypes|default([])) + [item] }}"
  when: (item | title) in ('Ca', 'Orderer', 'Peer') 
  with_items: "{{ assettypes }}"

- name: Execute the action
  include_tasks: 'getresources.yml'
  loop: "{{ ['Console'] + alltypes }}"
  loop_control:
    loop_var: restype

- name: Setup destination dir
  set_fact:
    targetdir: "{{ lookup('env','HOME') }}/agent/download"

- name: Make sure that asset target directory exists
  file:
    path: '{{ targetdir }}'
    state: '{{ item }}'
    mode: 0775
  with_items:
  - 'absent'
  - 'directory'

- name: Package all the assets to one file
  archive:
    path: "{{ workdir }}/{{ orgid }}/assets"
    dest: "{{ targetdir }}/{{ orgid }}-assets.zip"
    format: zip

- name: Get the pod name
  set_fact:
    podname: "{{ lookup('env', 'HOSTNAME') }}"
    controllerns: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/namespace') }}"

- name: Update the crd status
  operator_sdk.util.k8s_status:
    api_version: operator.fabric.hyperledger.org/v1alpha1
    kind: Agent
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      download: >-
        kubectl cp -n {{ controllerns }} -c manager
        {{ podname }}:{{ targetdir }}/{{ orgid }}-assets.zip .
