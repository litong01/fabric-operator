- name: Check if the organization variable is set
  when: organization == None or (organization|trim) == ''
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Failed - organization must be provided in the request'

- name: Get all the actions
  set_fact:
    allactions: '{{ actions | map(attribute="name") | list }}'

- name: Get available actions
  find:
    paths: '{{ role_path }}/ops'
    recurse: no
    file_type: directory
  register: availableactions_var

- name: Get supported actions
  set_fact:
    supactions: "{{ availableactions_var.files | map(attribute='path') | list | map('basename') | list }}"

- name: Validate all actions must be part of supported
  when: (allactions | difference(supactions) | length) > 0
  include_tasks: '{{ role_path }}/common/endplay.yml'
  vars:
    RESULT_MSG: 'Failed -Action {{ allactions | difference(supactions) | join(",") }} not supported!'

- name: Set work directory
  set_fact:
    bindir: "{{ lookup('env','HOME') }}/agent/{{ release }}"
    workdir: "{{ lookup('env','HOME') }}/agent/{{ 99999999 | random | to_uuid }}"
    orgid: "{{ organization | replace('.', '-') }}"
    uploaddir: "{{ lookup('env','HOME') }}/agent/upload"
    downloaddir: "{{ lookup('env','HOME') }}/agent/download"
    podname: "{{ lookup('env', 'HOSTNAME') }}"
    controllerns: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/namespace') }}"

- name: Setup action working directory
  set_fact:
    tactions: >-
      {{ tactions|default([]) +
         [ item | combine({'aworkdir':((item|to_nice_json|hash('sha256')))[:16]}) ] }}
  with_items: "{{ actions }}"
