---
# default configuration for Orderer node

# organization name of the Order node. Should be a dns like string
# this is a required attribute, if it is empty, the error will occur
organization:

# Certificate for the Orderer node will be saved as k8s secret. The name
# of the secret is configurable, this is to allow users to use
# their own certificate. If the secret name is left empty, then
# this operator will automatically generate self signed certificates
# based on the given organization name and name of the ca node. The name
# of the secret will be the concatnation of the ca node name
# organization name and word nodecert. For example, if the ca node name is ca1
# organization name is example.com, then the ca secret name will be
# ca1-example-com-nodecert. Basically a new Nodecert resource will be
# created which will in turn create the secret. The generated cert,
# private key and tls cert, key will be saved in the secret in the following format
# 
# For both Orderer and Peer node
# data:
#   tlsca.crt:
#   server.key:
#   server.crt:
#   adminca.crt:
#   admin.key:
#   admin.crt:
nodeCert:

# peer node fabric release, the valid number must match available fabric peer
# releases which is available here https://github.com/hyperledger/fabric/releases
# Since the operator download the executable from the URL pointed repository, the
# valid releases must be one of the releases appeared in that list which always
# comes with 3 parts separated by dot. For example 2.3.2 is a valid release value
# since it matches one of the releases. where 2.3 is not a valid release since
# the release site wont have a match release.
release: 2.3.2

# ca node storage size, this has to be valid kubernetes storage size
storage: 5Gi

# ca node logging level.
logLevel: ERROR